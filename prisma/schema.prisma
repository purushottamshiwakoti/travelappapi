// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  fullName   String
  email      String     @unique
  password   String
  tokens     Token[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Rating     Rating[]
  Feedback   Feedback[]
}

model Token {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  token String @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
}

model Places {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       String
  description String
  image       String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  Rating      Rating[]
  Feedback    Feedback[]
}

model Rating {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  rating     String
  place      Places   @relation(fields: [placesId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  placesId   String   @db.ObjectId
  userId     String   @db.ObjectId
}

model Feedback {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  feedback   String
  user       User     @relation(fields: [userId], references: [id])
  place      Places   @relation(fields: [placesId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     String   @db.ObjectId
  placesId   String   @db.ObjectId
}
